package com.sparl.url.spark_straming;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Timer;
import java.util.TimerTask;
import java.util.regex.Pattern;

import org.apache.spark.SparkConf;
import org.apache.spark.storage.StorageLevel;
import org.apache.spark.streaming.Duration;
import org.apache.spark.streaming.api.java.JavaReceiverInputDStream;
import org.apache.spark.streaming.api.java.JavaStreamingContext;
import org.apache.spark.streaming.receiver.Receiver;

public class UrlStreaming extends Receiver<String> {
	private static final Pattern SPACE = Pattern.compile(" ");
	String url = null;

	public UrlStreaming(String url_) {
		super(StorageLevel.MEMORY_AND_DISK_2());

		url = url_;
		// TODO Auto-generated constructor stub
	}

	public static void main(String[] args) {

		if (args.length < 1) {
			System.err.println("Usage: JavaCustomReceiver <url>");
			System.exit(1);
		}

		// StreamingExamples.setStreamingLogLevels();

		// Create the context with a 1 second batch size
		SparkConf sparkConf = new SparkConf().setMaster("local[2]").setAppName("urlstreaming");
		JavaStreamingContext ssc = new JavaStreamingContext(sparkConf, new Duration(1000));

		// Create a input stream with the custom receiver on target ip:port and
		// count the
		// words in input stream of \n delimited text (eg. generated by 'nc')
		JavaReceiverInputDStream<String> lines = ssc.receiverStream(new UrlStreaming(args[0]));
		/*
		 * JavaDStream<String> words = lines.flatMap(new FlatMapFunction<String,
		 * String>() { public Iterable<String> call(String x) { return
		 * Lists.newArrayList(SPACE.split(x)); } });
		 */
		lines.print();
		ssc.start();
		ssc.awaitTermination();
	}

	@Override
	public void onStart() {
		// TODO Auto-generated method stub

		/*new Thread() {
			public void run() {
				receive();
			}
		}.start();*/
		
		 new Timer().scheduleAtFixedRate(new TimerTask() {
			
			@Override
			public void run() {
				// TODO Auto-generated method stub
				receive();
			}
		}, 1000, 1000);
		

	}

	@Override
	public void onStop() {
		// TODO Auto-generated method stub

	}

	public void receive() {
		String record="";
		try {
			
			
			String url1=url;
			URL url = new URL(url1);
			
			// read text returned by server
		    BufferedReader in = new BufferedReader(new InputStreamReader(url.openStream()));
		    
		    String line;
		    while ((line = in.readLine()) != null) {
		    	record+=line;
		    	
		    }
		    store(record);
		    System.out.println(record);
		    in.close();
		   
		    
		}
		catch (MalformedURLException e) {
			System.out.println("Malformed URL: " + e.getMessage());
		}
		catch (IOException e) {
			System.out.println("I/O Error: " + e.getMessage());
		} 	}
}
